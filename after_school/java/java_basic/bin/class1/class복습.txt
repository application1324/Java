학생의 정보을 출력 프로그램
두 명의 학생 정보를 출력하는데
각 학생은 이름, 나이, 성적을 가지고 있다.

1. 
	홍길동, 15, 90
2. 
	장발장, 16, 80

출력 
	이름 : [이름] 나이 : [나이]세 성적:[성적]점
변수를 사용하여 학생 정보를 저장하고,
변수를 사용하여 학생 정보를 출력해보자!

위 방식은 
학생이 늘어날 때 마다 변수와 출력하는 코드를 추가해야 하는
문제점이 있다!

이러한 문제점을 해결하기 위해서는 배열을 사용해야 한다.
배열은 기본적인 자료구조이기 때문에 잘알아야 한다
그리고 배열의 변수명은 복수의 값이 들어가기 때문에 복수로 짓는다.

배열을 사용하여 코드를 다시 작성해였을 때,
1.학생이 추가되어도 배열에 데이터만 추가하면 됨, 변수추가X
2.출력을 반복문을 통해 배열을 순차적으로 탐색하므로,
	학생이 추가되어도 출력 코드를 추가할 필요가 없음.
	
코드 변경은 최소화 되있으나,
한 삭생의 데이터가 3개의 배열로 나눠서 관리가 됨
테이터를 변경, 삭제할 때 매우 조심히 적어야 한다.
따라서 위와 같은 코드는
컴퓨터가 볼 때는 전혀 문제가 없지만, 사람이 관리하기에는 좋은 코드가 아님!!

그래서 클래스를 도입함!!
클래스를 사용해 학생이라는 개념을 만들고,
각각의 학생별로 본인의 나이, 성적을 관리함!
데이터가 꼬이는 문제가 발생하지 않음

참조값을 변수에 보관하는 이유
객체를 생성하는 new Student() 코드 자체에는 이름이 없음
이 코드는 단순히 Student 클래스를 기반으로 메모리에
실체 객체를 만드는 기능만 함
따라서 생성 한 객체에 접근할 방법이 필요함
객첼르 생성할때는 반환된는 참조값(주소)를 알면
객체에 접근할 수 있음
따라서 반환디는 참조값(주소)를 젖앟ㄹ 변수가 필ㅇ하여
앞서 Student stu1로 선언한 변수(stu1)에 참조값을 
저장하여 필요할 때 객체에 접근 할수 있음
가비저클린터가 접근할수없는 객체을 지운다.

정리
Student stu1 = new Student(); // Student 객체 생성
Student sut1 = 0x0099ff, // new Student() 결과로 참조값(주소)반환
stu1 = 0x0099ff // 변수에 주소가 담긴다.

필드에 배열을 더하면 편하지 않을까?  